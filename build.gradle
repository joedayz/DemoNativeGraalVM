plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.hibernate.orm' version '6.6.4.Final'
	id 'org.graalvm.buildtools.native' version '0.10.4'
}

group = 'com.pacifico'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//ext {
//	set('springCloudAzureVersion', "5.19.0")
//}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'com.azure.spring:spring-cloud-azure-starter'
//	implementation 'com.azure.spring:spring-cloud-azure-starter-storage'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.microsoft.sqlserver:mssql-jdbc:12.9.0.jre11-preview'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


//dependencyManagement {
//	imports {
//		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
//	}
//}


graalvmNative {
    binaries {
        main {
            // Agrega argumentos de compilación nativa
            buildArgs.add('--enable-url-protocols=http') // Habilita el protocolo HTTP
            buildArgs.add('-H:+AddAllCharsets') // Incluye todos los conjuntos de caracteres
        }
        test {
            // Agrega argumentos de compilación nativa para las pruebas
            buildArgs.add('--enable-url-protocols=http')
            buildArgs.add('-H:+AddAllCharsets')
        }
    }
    // Configura el repositorio de metadatos (opcional)
    metadataRepository {
        enabled.set(true)
    }
}


tasks.named('test') {
	useJUnitPlatform()
}
